"""Add group formation workflow tables

Revision ID: 02188806888f
Revises: 752c18db175d
Create Date: 2025-09-18 15:54:55.312960

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '02188806888f'
down_revision = '752c18db175d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_lifecycle_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('event_status', sa.String(), nullable=True),
    sa.Column('previous_status', sa.String(), nullable=True),
    sa.Column('new_status', sa.String(), nullable=True),
    sa.Column('triggered_by', sa.String(), nullable=True),
    sa.Column('triggered_by_user_id', sa.Integer(), nullable=True),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('event_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['triggered_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_lifecycle_events_id'), 'group_lifecycle_events', ['id'], unique=False)
    op.create_table('trip_coordinations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('coordinator_id', sa.Integer(), nullable=True),
    sa.Column('coordinator_assigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('itinerary_status', sa.String(), nullable=True),
    sa.Column('accommodation_status', sa.String(), nullable=True),
    sa.Column('transport_status', sa.String(), nullable=True),
    sa.Column('activities_status', sa.String(), nullable=True),
    sa.Column('planning_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('final_itinerary_shared_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trip_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trip_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('group_chat_created', sa.Boolean(), nullable=True),
    sa.Column('group_chat_link', sa.String(), nullable=True),
    sa.Column('welcome_package_sent', sa.Boolean(), nullable=True),
    sa.Column('itinerary_document_url', sa.String(), nullable=True),
    sa.Column('booking_confirmations', sa.JSON(), nullable=True),
    sa.Column('emergency_contacts', sa.JSON(), nullable=True),
    sa.Column('trip_status', sa.String(), nullable=True),
    sa.Column('check_in_data', sa.JSON(), nullable=True),
    sa.Column('feedback_collected', sa.Boolean(), nullable=True),
    sa.Column('trip_rating', sa.Float(), nullable=True),
    sa.Column('completion_notes', sa.Text(), nullable=True),
    sa.Column('coordination_notes', sa.Text(), nullable=True),
    sa.Column('special_requirements', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['coordinator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id')
    )
    op.create_index(op.f('ix_trip_coordinations_id'), 'trip_coordinations', ['id'], unique=False)
    op.create_table('group_member_confirmations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('interest_id', sa.Integer(), nullable=False),
    sa.Column('traveler_id', sa.Integer(), nullable=True),
    sa.Column('confirmation_token', sa.String(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('amount_due', sa.Float(), nullable=True),
    sa.Column('payment_status', sa.String(), nullable=True),
    sa.Column('payment_intent_id', sa.String(), nullable=True),
    sa.Column('payment_transaction_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reminder_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmation_notes', sa.Text(), nullable=True),
    sa.Column('decline_reason', sa.String(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['interest_id'], ['interests.id'], ),
    sa.ForeignKeyConstraint(['traveler_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_member_confirmations_confirmation_token'), 'group_member_confirmations', ['confirmation_token'], unique=True)
    op.create_index(op.f('ix_group_member_confirmations_id'), 'group_member_confirmations', ['id'], unique=False)
    op.create_table('payment_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.String(), nullable=False),
    sa.Column('payment_intent_id', sa.String(), nullable=True),
    sa.Column('external_transaction_id', sa.String(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('interest_id', sa.Integer(), nullable=True),
    sa.Column('traveler_id', sa.Integer(), nullable=True),
    sa.Column('confirmation_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_provider', sa.String(), nullable=True),
    sa.Column('provider_fee', sa.Float(), nullable=True),
    sa.Column('net_amount', sa.Float(), nullable=True),
    sa.Column('failure_code', sa.String(), nullable=True),
    sa.Column('failure_message', sa.Text(), nullable=True),
    sa.Column('refunded_amount', sa.Float(), nullable=True),
    sa.Column('refund_reason', sa.Text(), nullable=True),
    sa.Column('refunded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.Column('audit_log', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['confirmation_id'], ['group_member_confirmations.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['interest_id'], ['interests.id'], ),
    sa.ForeignKeyConstraint(['traveler_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_transactions_id'), 'payment_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_payment_transactions_payment_intent_id'), 'payment_transactions', ['payment_intent_id'], unique=False)
    op.create_index(op.f('ix_payment_transactions_transaction_id'), 'payment_transactions', ['transaction_id'], unique=True)
    op.add_column('groups', sa.Column('confirmation_deadline', sa.DateTime(timezone=True), nullable=True))
    op.add_column('groups', sa.Column('auto_confirm_enabled', sa.Boolean(), nullable=True))
    op.add_column('groups', sa.Column('minimum_confirmation_rate', sa.Float(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('groups', 'minimum_confirmation_rate')
    op.drop_column('groups', 'auto_confirm_enabled')
    op.drop_column('groups', 'confirmation_deadline')
    op.drop_index(op.f('ix_payment_transactions_transaction_id'), table_name='payment_transactions')
    op.drop_index(op.f('ix_payment_transactions_payment_intent_id'), table_name='payment_transactions')
    op.drop_index(op.f('ix_payment_transactions_id'), table_name='payment_transactions')
    op.drop_table('payment_transactions')
    op.drop_index(op.f('ix_group_member_confirmations_id'), table_name='group_member_confirmations')
    op.drop_index(op.f('ix_group_member_confirmations_confirmation_token'), table_name='group_member_confirmations')
    op.drop_table('group_member_confirmations')
    op.drop_index(op.f('ix_trip_coordinations_id'), table_name='trip_coordinations')
    op.drop_table('trip_coordinations')
    op.drop_index(op.f('ix_group_lifecycle_events_id'), table_name='group_lifecycle_events')
    op.drop_table('group_lifecycle_events')
    # ### end Alembic commands ###