"""Add traveler document management models

Revision ID: da2c3a9f3b83
Revises: e4fc76cd0af6
Create Date: 2025-09-18 01:59:05.536024

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'da2c3a9f3b83'
down_revision = 'e4fc76cd0af6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_verification_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('previous_status', sa.String(), nullable=True),
    sa.Column('new_status', sa.String(), nullable=False),
    sa.Column('verified_by', sa.Integer(), nullable=False),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('ai_verification_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_verification_history_id'), 'document_verification_history', ['id'], unique=False)
    op.create_table('user_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(), nullable=False),
    sa.Column('document_number', sa.String(), nullable=False),
    sa.Column('document_name', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('issuing_authority', sa.String(), nullable=True),
    sa.Column('place_of_issue', sa.String(), nullable=True),
    sa.Column('verification_status', sa.String(), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_documents_document_number'), 'user_documents', ['document_number'], unique=False)
    op.create_index(op.f('ix_user_documents_id'), 'user_documents', ['id'], unique=False)
    op.create_table('travel_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('destination_id', sa.Integer(), nullable=True),
    sa.Column('document_type', sa.String(), nullable=False),
    sa.Column('document_title', sa.String(), nullable=False),
    sa.Column('document_description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('travel_date', sa.DateTime(), nullable=True),
    sa.Column('validity_start', sa.DateTime(), nullable=True),
    sa.Column('validity_end', sa.DateTime(), nullable=True),
    sa.Column('vendor_name', sa.String(), nullable=True),
    sa.Column('booking_reference', sa.String(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['destinations.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_travel_documents_id'), 'travel_documents', ['id'], unique=False)
    op.create_table('passenger_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interest_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('passenger_name', sa.String(), nullable=False),
    sa.Column('passenger_email', sa.String(), nullable=True),
    sa.Column('passenger_phone', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('relationship_type', sa.String(), nullable=True),
    sa.Column('document_type', sa.String(), nullable=False),
    sa.Column('document_number', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('issuing_authority', sa.String(), nullable=True),
    sa.Column('place_of_issue', sa.String(), nullable=True),
    sa.Column('verification_status', sa.String(), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['interest_id'], ['interests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_passenger_documents_document_number'), 'passenger_documents', ['document_number'], unique=False)
    op.create_index(op.f('ix_passenger_documents_id'), 'passenger_documents', ['id'], unique=False)
    op.create_table('document_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('travel_document_id', sa.Integer(), nullable=True),
    sa.Column('user_document_id', sa.Integer(), nullable=True),
    sa.Column('passenger_document_id', sa.Integer(), nullable=True),
    sa.Column('can_view', sa.Boolean(), nullable=True),
    sa.Column('can_download', sa.Boolean(), nullable=True),
    sa.Column('access_granted_by', sa.Integer(), nullable=False),
    sa.Column('access_granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('access_expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['access_granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['passenger_document_id'], ['passenger_documents.id'], ),
    sa.ForeignKeyConstraint(['travel_document_id'], ['travel_documents.id'], ),
    sa.ForeignKeyConstraint(['user_document_id'], ['user_documents.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_access_id'), 'document_access', ['id'], unique=False)
    op.add_column('interests', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'interests', 'users', ['user_id'], ['id'])
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('date_of_birth', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('users', sa.Column('nationality', sa.String(), nullable=True))
    op.add_column('users', sa.Column('address_line1', sa.String(), nullable=True))
    op.add_column('users', sa.Column('address_line2', sa.String(), nullable=True))
    op.add_column('users', sa.Column('city', sa.String(), nullable=True))
    op.add_column('users', sa.Column('state', sa.String(), nullable=True))
    op.add_column('users', sa.Column('postal_code', sa.String(), nullable=True))
    op.add_column('users', sa.Column('country', sa.String(), nullable=True))
    op.add_column('users', sa.Column('emergency_contact_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('emergency_contact_phone', sa.String(), nullable=True))
    op.add_column('users', sa.Column('profile_picture_url', sa.String(), nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('phone_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('documents_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('kyc_status', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'kyc_status')
    op.drop_column('users', 'documents_verified')
    op.drop_column('users', 'phone_verified')
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'profile_picture_url')
    op.drop_column('users', 'emergency_contact_phone')
    op.drop_column('users', 'emergency_contact_name')
    op.drop_column('users', 'country')
    op.drop_column('users', 'postal_code')
    op.drop_column('users', 'state')
    op.drop_column('users', 'city')
    op.drop_column('users', 'address_line2')
    op.drop_column('users', 'address_line1')
    op.drop_column('users', 'nationality')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'date_of_birth')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_constraint(None, 'interests', type_='foreignkey')
    op.drop_column('interests', 'user_id')
    op.drop_index(op.f('ix_document_access_id'), table_name='document_access')
    op.drop_table('document_access')
    op.drop_index(op.f('ix_passenger_documents_id'), table_name='passenger_documents')
    op.drop_index(op.f('ix_passenger_documents_document_number'), table_name='passenger_documents')
    op.drop_table('passenger_documents')
    op.drop_index(op.f('ix_travel_documents_id'), table_name='travel_documents')
    op.drop_table('travel_documents')
    op.drop_index(op.f('ix_user_documents_id'), table_name='user_documents')
    op.drop_index(op.f('ix_user_documents_document_number'), table_name='user_documents')
    op.drop_table('user_documents')
    op.drop_index(op.f('ix_document_verification_history_id'), table_name='document_verification_history')
    op.drop_table('document_verification_history')
    # ### end Alembic commands ###